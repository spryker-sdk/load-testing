const scenarios = [
    {
        title: 'Storefront',
        status: 'inactive',
        tests: [
            { id: 'Home', title: 'Home page', route: '', requestType: ''},
            { id: 'Products', title: 'Products page', route: '', requestType: ''},
            { id: 'Pdp', title: 'PDP page', route: '', requestType: ''},
            { id: 'Results', title: 'Results page', route: '', requestType: ''},
            { id: 'Cart', title: 'Cart page', route: '', requestType: ''},
            { id: 'Checkout', title: 'Checkout page', route: '', requestType: ''},
        ],
    },
    {
        title: 'Frontend API',
        status: 'active',
        tests: [
            { id: 'CreateCustomersAddressesFrontendApi', title: 'CreateCustomersAddressesFrontendApi'},
            { id: 'GetCollectionOfCustomersAddressesFrontendApi', title: 'GetCollectionOfCustomersAddressesFrontendApi'},
            { id: 'GetCollectionOfCatalogSearchProductOffersFrontendApi', title: 'GetCollectionOfCatalogSearchProductOffersFrontendApi'},
            { id: 'UpdateCustomerPasswordFrontendApi', title: 'UpdateCustomerPasswordFrontendApi'},
            { id: 'CreateAccessTokensFrontendApi', title: 'CreateAccessTokensFrontendApi'},
            { id: 'CreateRefreshTokensFrontendApi', title: 'CreateRefreshTokensFrontendApi'},
            { id: 'CreateCustomerForgottenPasswordFrontendApi', title: 'CreateCustomerForgottenPasswordFrontendApi'},
            { id: 'DeleteCustomersFrontendApi', title: 'DeleteCustomersFrontendApi'},
            { id: 'CreateCustomersFrontendApi', title: 'CreateCustomersFrontendApi'},
            { id: 'CreateCartsFrontendApi', title: 'CreateCartsFrontendApi'},
            { id: 'CreateCheckoutDataFrontendApi', title: '[full flow]CreateCheckoutDataFrontendApi'},
            { id: 'CreateCheckoutFrontendApi', title: '[full flow]Checkout request'},
            { id: 'CreateCheckoutFiftyItemsFrontendApi', title: '[full flow]Checkout request with 50 items'},
            { id: 'CreateCheckoutSeventyItemsFrontendApi', title: '[full flow]Checkout request with 70 items'},
            { id: 'CreateInstacartCallbacksFrontendApi', title: 'CreateInstacartCallbacksFrontendApi'},
            { id: 'AddItemToCartFullFlowApi', title: '[full flow]Add item to cart'},
            { id: 'CreateCartMerchantTimeslotReservationsFrontendApi', title: 'CreateCartMerchantTimeslotReservationsFrontendApi'},

            { id: 'GetCollectionOfStoresFrontendApi', title: 'GetCollectionOfStoresFrontendApi'},
            { id: 'GetStoresFrontendApi', title: 'GetStoresFrontendApi'},
            { id: 'GetCollectionOfCategoryTreesFrontendApi', title: 'GetCollectionOfCategoryTreesFrontendApi'},
            { id: 'GetCategoryNodesFrontendApi', title: 'Get Category Nodes'},
            { id: 'GetCustomersFrontendApi', title: 'GetCustomersFrontendApi'},
            { id: 'GetCollectionOfCustomersFrontendApi', title: 'GetCollectionOfCustomersFrontendApi'},
            { id: 'PdpApi', title: 'PDP request'},
            { id: 'CartByIdFullFlowApi', title: '[full flow]Get Customer cart by id'},
            { id: 'GetCollectionOfConcreteProductsConcreteProductImageSetsFrontendApi', title: 'GetCollectionOfConcreteProductsConcreteProductImageSetsFrontendApi'},
            { id: 'GetOrdersFrontendApi', title: '[full flow]GetOrdersFrontendApi'},
            { id: 'GetCollectionOfHealthCheckServicesFrontendApi', title: 'GetCollectionOfHealthCheckServicesFrontendApi'},
            { id: 'GetMerchantsFrontendApi', title: 'GetMerchantsFrontendApi'},
            { id: 'GetCollectionOfMerchantsFrontendApi', title: 'GetCollectionOfMerchantsFrontendApi'},
            { id: 'GetCollectionOfMerchantsMerchantAddressesFrontendApi', title: 'GetCollectionOfMerchantsMerchantAddressesFrontendApi'},
            { id: 'GetProductOffersFrontendApi', title: 'GetProductOffersFrontendApi'},
            { id: 'GetCollectionOfConcreteProductsProductOffersFrontendApi', title: 'GetCollectionOfConcreteProductsProductOffersFrontendApi'},
            { id: 'GetCollectionOfPreviewPickupTimeslotsFrontendApi', title: 'GetCollectionOfPreviewPickupTimeslotsFrontendApi'},
            { id: 'GetCollectionOfCartsCartMerchantTimeslotsFrontendApi', title: 'GetCollectionOfCartsCartMerchantTimeslotsFrontendApi'},
            { id: 'GetCollectionOfCartsDeliveryTimeslotsFrontendApi', title: 'GetCollectionOfCartsDeliveryTimeslotsFrontendApi'},

            { id: 'GetCollectionOfCatalogSearchSuggestionsProductOffersFrontendApi', title: 'GetCollectionOfCatalogSearchSuggestionsProductOffersFrontendApi'},
            // { id: 'GetCollectionOfProductOffersAlternativeProductOffersFrontendApi', title: 'GetCollectionOfProductOffersAlternativeProductOffersFrontendApi'},
            { id: 'MerchantSearchApi', title: 'Merchant Search Request'},
            { id: 'GetCollectionOfMerchantsMerchantOpeningHoursFrontendApi', title: 'GetCollectionOfMerchantsMerchantOpeningHoursFrontendApi'},
            { id: 'GetCollectionOfMerchantCategoryTreesFrontendApi', title: 'GetCollectionOfMerchantCategoryTreesFrontendApi'},
            { id: 'GetCollectionOfProductOffersProductOfferPricesFrontendApi', title: 'GetCollectionOfProductOffersProductOfferPricesFrontendApi'},
            { id: 'GetCollectionOfPreviewDeliveryTimeslotsFrontendApi', title: 'GetCollectionOfPreviewDeliveryTimeslotsFrontendApi'},
            { id: 'GetCollectionOfCustomersCartsFrontendApi', title: 'GetCollectionOfCustomersCartsFrontendApi'},
            { id: 'GetCollectionOfCustomersOrdersFrontendApi', title: 'GetCollectionOfCustomersOrdersFrontendApi'},
            { id: 'GetProductMeasurementUnitsFrontendApi', title: 'GetProductMeasurementUnitsFrontendApi'},
            { id: 'GetCollectionOfConcreteProductsSalesUnitsFrontendApi', title: 'GetCollectionOfConcreteProductsSalesUnitsFrontendApi'},
            { id: 'GetCustomerPaymentMethodsFrontendApi', title: 'GetCustomerPaymentMethodsFrontendApi'},
            { id: 'GetCollectionOfCustomerPaymentMethodsFrontendApi', title: 'GetCollectionOfCustomerPaymentMethodsFrontendApi'},

            { id: 'UpdateCustomersFrontendApi', title: 'UpdateCustomersFrontendApi', route: '', requestType: ''},
            { id: 'UpdateCartsItemsFrontendApi', title: '[full flow]UpdateCartsItemsFrontendApi', route: '', requestType: ''},
            // { id: 'UpdateCartItemFullFlowApi', title: '[full flow]Update Cart Item request', route: '', requestType: ''},
            { id: 'UpdateCartFullFlowApi', title: '[full flow]Update Cart request', route: '', requestType: ''},
            { id: 'DeleteCartsItemsFrontendApi', title: 'Delete Carts Items', route: '', requestType: ''},
            { id: 'DeleteRefreshTokensFrontendApi', title: 'DeleteRefreshTokensFrontendApi', route: '', requestType: ''},
            { id: 'DeleteCustomerPaymentMethodsFrontendApi', title: 'DeleteCustomerPaymentMethodsFrontendApi', route: '', requestType: ''},

            { id: 'ImportMerchantsApi', title: 'Import Merchants', route: '', requestType: ''},
            { id: 'ImportCategoriesApi', title: 'Import Categories', route: '', requestType: ''},
            { id: 'ImportProductsApi', title: 'Import Products', route: '', requestType: ''},
            { id: 'ImportProductImagesApi', title: 'Import Product Images', route: '', requestType: ''},
            { id: 'ImportProductPricesApi', title: 'Import Product Prices', route: '', requestType: ''},
            { id: 'ImportProductOffersApi', title: 'Import Product Offers', route: '', requestType: ''},
            { id: 'ImportProductCategoriesApi', title: 'Import Product Categories', route: '', requestType: ''},
            { id: 'ImportHealthCheckApi', title: 'Import Health check', route: '', requestType: ''},

            // { id: 'CheckoutFullFlowLessOrEqualFiftyItemsApi', title: '[full flow]Checkout request with <= 50 items', route: '', requestType: ''},
            // { id: 'CatalogSearchProductOffersApi', title: 'Catalog Search Product Offers', route: '', requestType: ''},
            // { id: 'CatalogSearchSuggestionsProductOffersApi', title: 'Catalog Search Suggestions Product Offers', route: '', requestType: ''},
            // { id: 'MerchantCategoryTreesApi', title: 'Merchant Category Trees', route: '', requestType: ''},

            // { id: 'CartsFullFlowApi', title: '[full flow]Get Customer carts', route: '', requestType: ''},
            // { id: 'CartMerchantTimeslotFullFlowApi', title: '[full flow]Cart merchant timeslots request', route: '', requestType: ''},

            { id: 'CheckoutApi', title: '[load-test branch]Checkout request', route: '', requestType: ''},
            { id: 'CheckoutWithLessOrEqualFiftyItemsApi', title: '[load-test branch]Checkout With Less Or Equal Fifty Items request', route: '', requestType: ''},
            { id: 'CheckoutWithFiftyToSeventyItemsApi', title: '[load-test branch]Checkout With Fifty To Seventy Items request', route: '', requestType: ''},
            { id: 'CsvFixturesAddToCartApi', title: '[load-test branch]Download Fixtures in Csv File for Add To Cart(1 item)', route: '', requestType: ''},
            { id: 'CsvFixturesAddToCartLessOrEqualFiftyItemsApi', title: '[load-test branch]Download Fixtures in Csv File for Add To Cart <= 50 Items', route: '', requestType: ''},
            { id: 'CsvFixturesAddToCartFiftyToSeventyItemsApi', title: '[load-test branch]Download Fixtures in Csv File for Add To Cart >= 50 & <= 70 Items', route: '', requestType: ''},
            { id: 'AddItemToCartApi', title: '[load-test branch]Add item to cart', route: '', requestType: ''},
            { id: 'AddItemToCartWithLessOrEqualFiftyItemsApi', title: '[load-test branch]Add Item To Cart with <= 50 items', route: '', requestType: ''},
            { id: 'AddItemToCartWithFiftyToSeventyItemsApi', title: '[load-test branch]Add Item To Cart with >= 50 & <= 70 items', route: '', requestType: ''},
        ],
    },
    {
        title: 'Backend API',
        status: 'active',
        tests: [
            { id: 'TokenBackendApi', title: 'Token request', route: '', requestType: ''},
            { id: 'CodeAuthorizeBackendApi', title: 'Code Authorize request', route: '', requestType: ''},
        ],
    },
];

module.exports = scenarios;
