openapi: 3.0.0
info:
    version: 1.0.0
    contact:
        name: Spryker
        url: 'https://support.spryker.com/'
        email: support@spryker.com
    title: 'Spryker API'
    license:
        name: MIT
tags:
    -
        name: orders
servers:
    -
        url: 'https://integration-api.us.sbx1.commerce.ci-aldi.com'
paths:
    '/merchants/{merchantReference}/picking-orders':
        get:
            summary: 'Retrieves list of orders ready for picking of the selected merchant.'
            tags:
                - orders
            parameters:
                -
                    $ref: '#/components/parameters/acceptLanguage'
                -
                    name: merchantReference
                    in: path
                    required: true
                    description: 'Merchant reference.'
                    schema:
                        type: string
                -
                    name: filter[order.ids]
                    in: query
                    required: false
                    description: 'IDs of orders, comma separated.'
                    schema:
                        type: string
            security:
                -
                    BearerAuth: []
            operationId: get-collection-of-orders
            responses:
                200:
                    description: 'Expected response to a valid request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestOrdersBackendCollectionResponse'
                403:
                    description: 'Unauthorized request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                default:
                    description: 'Expected response to a bad request.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
components:
    securitySchemes:
        BearerAuth:
            type: http
            scheme: bearer
    schemas:
        ErrorResponse:
            properties:
                errors:
                    type: array
                    items:
                        $ref: '#/components/schemas/RestErrorMessage'
        RestErrorMessage:
            properties:
                code:
                    type: string
                status:
                    type: integer
                detail:
                    type: string
        RestLinks:
            properties:
                self:
                    type: string
        RestOrderBagsBackendAttributes:
            properties:
                productType:
                    type: string
                    example: 'freezer,fresh,meat,shelf'
                quantity:
                    type: integer
                quantityOriginal:
                    type: integer
        RestOrderItemActionBackendAttributes:
            properties:
                title:
                    type: string
                action:
                    type: string
        RestOrderItemsBackendAttributes:
            properties:
                id:
                    type: string
                sku:
                    type: string
                barcode:
                    type: string
                quantity:
                    type: integer
                quantityOriginal:
                    type: integer
                amount:
                    type: number
                amountOriginal:
                    type: number
                unit:
                    type: string
                    example: 'pcs,lb'
                status:
                    type: string
                    example: 'normal,not found'
        RestOrdersBackendAttributes:
            properties:
                orderReference:
                    type: string
                status:
                    type: string
                    example: 'ready for picking,picking in progress,ready for pick up,pick up in progress,picked up'
                employeeID:
                    type: string
                pickupCode:
                    type: string
                cartNote:
                    type: string
                startTime:
                    type: string
                bagsCount:
                    type: integer
                endTime:
                    type: string
                actions:
                    type: array
                    items:
                        $ref: '#/components/schemas/RestOrderItemActionBackendAttributes'
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/RestOrderItemsBackendAttributes'
                bags:
                    type: array
                    items:
                        $ref: '#/components/schemas/RestOrderBagsBackendAttributes'
        RestOrdersBackendCollectionResponse:
            properties:
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/RestOrdersBackendCollectionResponseData'
                included:
                    $ref: '#/components/schemas/RestOrdersBackendIncluded'
        RestOrdersBackendCollectionResponseData:
            properties:
                type:
                    type: string
                    enum:
                        - orders
                id:
                    type: string
                attributes:
                    $ref: '#/components/schemas/RestOrdersBackendAttributes'
                links:
                    $ref: '#/components/schemas/RestLinks'
        RestOrdersBackendIncluded:
            properties: {  }
    parameters:
        acceptLanguage:
            name: Accept-Language
            in: header
            description: 'Locale value relevant for the store.'
            schema:
                type: string
            required: false
